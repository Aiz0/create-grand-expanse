image::icon.png[Create Grand Expanse Logo, 200, 200]

= Create: Grand Expanse
ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]

A Progression modpack centered around Create and Ad Astra.

WARNING: This pack is in early development.


== Installation and Developement

This modpack uses https://packwiz.infra.link/[packwiz] to manage mods from CurseForge and Modrinth. You need to https://packwiz.infra.link/installation/[install packwiz] to add mods and to install the modpack.footnote:[We haven't published this modpack anywhere yet so this is currently the only way to install it.]

=== Installation Instructions
Instructions are based on the https://packwiz.infra.link/tutorials/installing/packwiz-installer/[packwiz installer tutorial], Please check them if you have any issues.

. Clone this repository.

. https://packwiz.infra.link/installation/[Install packwiz].

. To install the modpack you need to to use a launcher that supports running prelaunch tasks.
footnote:[Pre launch tasks are not really required but it simplifys things.]
+
We recommend https://prismlauncher.org/[Prism Launcher].

. Create an instance matching the minecraft and modloader version the modpack uses.
+
Minecraft:: 1.19.2
Forge:: 43.3.0
. Download https://github.com/packwiz/packwiz-installer-bootstrap/releases[packwiz installer bootstrap] into the instance minecraft folder.
+
NOTE: This should be `minecraft`, if it's not there you can create it.

. In Prism Launcher, go to Edit Instance -> Settings -> Custom commands, check the Custom Commands box and paste the following command into the pre-launch command field:
+
.Pre-launch command
----
"$INST_JAVA" -jar packwiz-installer-bootstrap.jar http://localhost:8080/pack.toml
----
+
TIP: `packwiz-installer-bootstrap.jar` will query github for the latest version of packwiz installer If you see it failing often you can add `--bootstrap-no-update` as an option to `packwiz-installer-bootstrap.jar` to disable update checking.


. In your local repository run create a `index.toml` and then run `packwiz serve` to host a local copy of `pack.toml` that packwiz installer can access. `pack.toml` will be updated every time it's queried.
footnote:[This should default to http://localhost:8080/pack.toml. The same url we entered in the pre-launch command field.]

. Now every time you launch the instance it will get the version of the modpack matching your local repository. Any changes you make will be applied when you launch the game.
+
TIP: If you are making changes that don't require minecraft to be restarted you can make a script that runs `packwiz-installer-bootstrap.jar` to update the modpack without restarting the game.

=== Development info
To prevent merge conflicts we have enabled the https://packwiz.infra.link/reference/additional-options/[packwiz option] `no-internal-hashes`.

IMPORTANT: Hashes will still be generated whenever the hosted `pack.toml` is queried.
Because of this please make sure to run `packwiz refresh` before adding files to commit.
